{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MusicLaB\\\\Desktop\\\\ortomolecular\\\\src\\\\components\\\\GruposMaterias\\\\GruposMaterias.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GruposMaterias = ({\n  courseid,\n  gruposMaterias,\n  setGruposMaterias,\n  grupoElegido,\n  setGrupoElegido,\n  userid\n}) => {\n  _s();\n  useEffect(() => {\n    enviarDatos();\n  }, [courseid]);\n  const enviarDatos = async () => {\n    const res = await fetch(`http://www.ort.edu.ar:50080/moodle/webservice/rest/server.php?wstoken=c74aa13d9dc951886bd3c5a7d80d1c7e&moodlewsrestformat=json&wsfunction=core_group_get_course_groups&courseid=${courseid.courseid}`);\n    const dataGruposMaterias = await res.json();\n    setGruposMaterias(dataGruposMaterias);\n  };\n  const cambiarGrupo = async (userid, courseid, grupoElegido) => {\n    console.log(\"userid\", userid, \"courseid\", courseid.id, \"grupoElegido\", grupoElegido.id);\n    await fetch(`http://www.ort.edu.ar:50080/moodle/webservice/rest/server.php?wstoken=c74aa13d9dc951886bd3c5a7d80d1c7e&moodlewsrestformat=json&wsfunction=core_group_delete_group_members&members[0][groupid]=${courseid.id}&members[0][userid]=${userid}`).then(await fetch(`http://www.ort.edu.ar:50080/moodle/webservice/rest/server.php?wstoken=c74aa13d9dc951886bd3c5a7d80d1c7e&moodlewsrestformat=json&wsfunction=core_group_add_group_members&members[0][groupid]=${grupoElegido.id}&members[0][userid]=${userid}`)).then(() => alert(\"Cambio Hecho\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listas\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Materia Elegida:\", grupoElegido ? grupoElegido.name : \"No elegiste Grupo destino\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => cambiarGrupo(userid, courseid, grupoElegido),\n        children: \"Cambiar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), \"Grupo a cambiar:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: gruposMaterias === null || gruposMaterias === void 0 ? void 0 : gruposMaterias.map((grupo, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setGrupoElegido(grupo),\n          children: [grupo.name, \" \", grupo.id]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(GruposMaterias, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GruposMaterias;\nexport default GruposMaterias;\nvar _c;\n$RefreshReg$(_c, \"GruposMaterias\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GruposMaterias","courseid","gruposMaterias","setGruposMaterias","grupoElegido","setGrupoElegido","userid","_s","enviarDatos","res","fetch","dataGruposMaterias","json","cambiarGrupo","console","log","id","then","alert","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","grupo","index","_c","$RefreshReg$"],"sources":["C:/Users/MusicLaB/Desktop/ortomolecular/src/components/GruposMaterias/GruposMaterias.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst GruposMaterias = ({courseid, gruposMaterias, setGruposMaterias, grupoElegido, setGrupoElegido, userid}) => {\r\n\r\n    \r\n    useEffect (()=>{    \r\n        enviarDatos()\r\n\r\n    }, [courseid])\r\n\r\n    const enviarDatos = async () => {\r\n    const res = await fetch(\r\n      `http://www.ort.edu.ar:50080/moodle/webservice/rest/server.php?wstoken=c74aa13d9dc951886bd3c5a7d80d1c7e&moodlewsrestformat=json&wsfunction=core_group_get_course_groups&courseid=${courseid.courseid}`\r\n    )\r\n\r\n    const dataGruposMaterias = await res.json()   \r\n    setGruposMaterias(dataGruposMaterias)    \r\n    }\r\n\r\n    const cambiarGrupo = async (userid,courseid, grupoElegido) => {\r\n        console.log(\"userid\", userid, \"courseid\", courseid.id, \"grupoElegido\", grupoElegido.id)\r\n        await fetch(\r\n            `http://www.ort.edu.ar:50080/moodle/webservice/rest/server.php?wstoken=c74aa13d9dc951886bd3c5a7d80d1c7e&moodlewsrestformat=json&wsfunction=core_group_delete_group_members&members[0][groupid]=${courseid.id}&members[0][userid]=${userid}`\r\n          )\r\n        \r\n        .then(await fetch(\r\n            `http://www.ort.edu.ar:50080/moodle/webservice/rest/server.php?wstoken=c74aa13d9dc951886bd3c5a7d80d1c7e&moodlewsrestformat=json&wsfunction=core_group_add_group_members&members[0][groupid]=${grupoElegido.id}&members[0][userid]=${userid}`\r\n          ))\r\n        .then(() => alert(\"Cambio Hecho\"))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <div className= \"listas\">\r\n            <p>Materia Elegida:{grupoElegido ? grupoElegido.name : \"No elegiste Grupo destino\"} </p>\r\n            <button onClick={ () => cambiarGrupo(userid, courseid, grupoElegido) }>Cambiar</button>\r\n        </div>\r\n        Grupo a cambiar: \r\n        <ul className=\"row\">\r\n              {gruposMaterias?.map((grupo, index) => {\r\n                \r\n                  return <p key={index} onClick={ () => setGrupoElegido(grupo)} >{grupo.name} {grupo.id}</p>\r\n                  })}\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GruposMaterias"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,cAAc,GAAGA,CAAC;EAACC,QAAQ;EAAEC,cAAc;EAAEC,iBAAiB;EAAEC,YAAY;EAAEC,eAAe;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAG7GV,SAAS,CAAE,MAAI;IACXW,WAAW,CAAC,CAAC;EAEjB,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,mLAAkLT,QAAQ,CAACA,QAAS,EACvM,CAAC;IAED,MAAMU,kBAAkB,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC3CT,iBAAiB,CAACQ,kBAAkB,CAAC;EACrC,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAOP,MAAM,EAACL,QAAQ,EAAEG,YAAY,KAAK;IAC1DU,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAET,MAAM,EAAE,UAAU,EAAEL,QAAQ,CAACe,EAAE,EAAE,cAAc,EAAEZ,YAAY,CAACY,EAAE,CAAC;IACvF,MAAMN,KAAK,CACN,iMAAgMT,QAAQ,CAACe,EAAG,uBAAsBV,MAAO,EAC5O,CAAC,CAEFW,IAAI,CAAC,MAAMP,KAAK,CACZ,8LAA6LN,YAAY,CAACY,EAAG,uBAAsBV,MAAO,EAC7O,CAAC,CAAC,CACHW,IAAI,CAAC,MAAMC,KAAK,CAAC,cAAc,CAAC,CAAC;EACtC,CAAC;EAEH,oBACEnB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAKqB,SAAS,EAAE,QAAQ;MAAAD,QAAA,gBACpBpB,OAAA;QAAAoB,QAAA,GAAG,kBAAgB,EAACf,YAAY,GAAGA,YAAY,CAACiB,IAAI,GAAG,2BAA2B,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxF1B,OAAA;QAAQ2B,OAAO,EAAGA,CAAA,KAAMb,YAAY,CAACP,MAAM,EAAEL,QAAQ,EAAEG,YAAY,CAAG;QAAAe,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,oBAEN,eAAA1B,OAAA;MAAIqB,SAAS,EAAC,KAAK;MAAAD,QAAA,EACZjB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEyB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAEnC,oBAAO9B,OAAA;UAAe2B,OAAO,EAAGA,CAAA,KAAMrB,eAAe,CAACuB,KAAK,CAAE;UAAAT,QAAA,GAAGS,KAAK,CAACP,IAAI,EAAC,GAAC,EAACO,KAAK,CAACZ,EAAE;QAAA,GAAtEa,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqE,CAAC;MAC1F,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAlB,EAAA,CA5CKP,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA8CpB,eAAeA,cAAc;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}